* TODO stuff to do

** DONE Deploy to Clojars

** TODO rulers for borders, dev debug overlay?
*** TODO would be nice to be able to draw sprites hitboxes

** TODO an easier way of making things clickable, the way buttons works repeats collision detection too much

** TODO BUG - clicking a button which starts a scene transition stops the mouse-released handler from being invoked, when you next visit the original scene the button is still pressed.
*** TODO the transition update should process at least mouse and keyboard release events

** TODO performance profiling (start with fps)
*** DONE profile fps
*** DONE create stress test
*** DONE add something to generate graphs based on profiling results?
*** TODO there's an issue with the stress test where the last data section for one stage is shown as the first section for the next stage
*** TODO bash script to compare stress test results on master vs current branch?
*** TODO try and clean up references to profiling in core

** TODO be able to specify a function for determining the order sprites should be drawn
*** maybe add in some defaults like top-to-bottom?

** TODO efficient and generic collision detection
*** performance is one thing, but we also want to try and solve being able to handle updating both entities involved in the collision
*** DONE create the structure required to check arbitrary sprite groups for collisions defined by collider maps on the scene.
*** DONE colliders should default to using w*h rect collision detection, but allow alternative collision detection function f(a,b) to be applied.
**** TODO provide helpful defaults like equal-positions, point-in-square, point-in-poly, point-in-rotating-poly
*** DONE implement a game that uses collision
*** DONE analyse performance characteristics of colliders

** TODO revisit sound, room for improvement
*** at least it's not throwing exceptions all over the place anymore

** TODO test using quip as a library from a seperate project
*** in progess...
*** reimplement lambdahoy?


** DONE rotatable sprites
